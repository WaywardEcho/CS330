1. What is the syntax for declaring a function in your language? 
	return type/void, method name, and parentheses with parameters if needed.
2. Are there any rules about where the function has to be placed in your code file so that it can 
run?
	Functions just need to be declared prior to when they're executed.
3. Does your language support recursive functions?

4. Can functions in your language accept multiple parameters?  Can they be of different data 
types? 
5. Can functions in your language return multiple values at the same time?  How is that 
implemented?  If not, are there ways around that problem?  What are they? 
6. Is your language pass-by reference or value?  Check your code against outside sources in case 
there is anything tricky going on (like in Perl).  
7. Where are the arguments, parameters and local variables stored (value-on-stack, ref-to-heap-on 
stack) during execution?  
8. What are the scoping rules in your language (visibility and lifetime of variables before, during 
and after code blocks)?  
9. Are side-effects possible? Are there guard rails against side-effects?  
10. Where are local variable values stored? (on the stack? On the heap?)  
11. Are there any other aspects of functions in your language that aren't specifically asked about 
here, but that are important to know in order to write one?  What are they? (e.g. dynamic vs 
static scope) 
If your language doesn't support anything like this, then explain why not and what it does instead (feel 
free to check in with me on this if you aren't sure what your language does). 
As always, write out the answers to these questions as though you were writing a guide for a new 
learner.  Make your answers as clear as possible, use code as examples and don't just answer the 
questions in one or two words.  Explain the reasoning behind the answers as much as possible.  If 
there is no clear-cut answer to a question, explain why not.  And cite your sources!   
Post both your code and your tutorial/ answers in your github repo, and be prepared to run your code 
for me in lab. 